version: "2.4"

services:

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: dev/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev/dev.conf:/etc/nginx/nginx.conf:ro
    networks:
      - main

  postgres:
    container_name: postgres
    image: postgres:14
    networks:
      - main
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.3
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    depends_on:
      - "postgres"
    networks:
      - main
    restart: unless-stopped

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    container_name: redis
    networks:
      - main

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
    ports:
      - "8085:8081"
    depends_on:
      - "redis"
    networks:
      - main

  backend: &backend
    container_name: backend
    build:
      context: ./backend
      target: local
    command:
      - "python3"
      - "manage.py"
      - "runserver"
      - "0.0.0.0:8000"
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    networks:
      - main
    environment:
      - CELERY_TASK_ALWAYS_EAGER=${CELERY_TASK_ALWAYS_EAGER:-0}
      - DJANGO_EMAIL_HOST=mailhog
      - DEBUG=1
      - POSTGRES_SERVICE_HOST=postgres
      - REDIS_SERVICE_HOST=redis
      - DJANGO_SETTINGS_MODULE=backend.settings.development

      # celery beat
      - PIDFILE=/code/celerybeat.pid
    depends_on:
      - postgres
      - redis

  celery_worker:
    <<: *backend
    container_name: celery_worker
    command:
      - "python3"
      - "manage.py"
      - "start_celery_worker"
    ports: []

  celery_beat:
    <<: *backend
    container_name: celery_beat
    command:
      - python3
      - manage.py
      - start_celery_beat
    ports: []

  # migrate command
  migrate:
    <<: *backend
    container_name: migrate
    command:
      - python3
      - manage.py
      - migrate
    ports: []
    depends_on:
      - postgres
      - redis
      - backend
    restart: "on-failure"

  notebook:
    <<: *backend
    container_name: notebook
    command:
      - python3
      - manage.py
      - shell_plus
      - --notebook
    ports:
      - "8888:8888"

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - main

  flower:
    container_name: flower
    image: mher/flower
    ports:
      - "49555:5555"
    networks:
      - main
    depends_on:
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1

volumes:
  pg-data:
  redis-data:
  pgadmin:

networks:
  main:
    driver: bridge
