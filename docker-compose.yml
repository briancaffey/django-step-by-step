version: "2.4"

services:
  postgres:
    container_name: postgres
    image: postgres:11.5
    networks:
      - main
    ports:
      - "5434:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:80"
    depends_on:
      - "postgres"
    networks:
      - main
    restart: unless-stopped

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    container_name: redis
    networks:
      - main

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
    ports:
      - "8085:8081"
    depends_on:
      - "redis"
    networks:
      - main

  backend: &backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command:
      - "python3"
      - "manage.py"
      - "runserver"
      - "0.0.0.0:8000"
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
      - "8888:8888"
    networks:
      - main
    environment:
      - DJANGO_EMAIL_HOST=mailhog
      - DEBUG=1
      - POSTGRES_SERVICE_HOST=postgres
      - REDIS_SERVICE_HOST=redis
      - DJANGO_SETTINGS_MODULE=backend.settings.development
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    depends_on:
      - postgres
      - redis

  celery_default:
    <<: *backend
    container_name: celery_default
    command:
      - "python3"
      - "manage.py"
      - "start_worker"
    ports: []

  beat:
    <<: *backend
    container_name: beat
    command:
      - python3
      - manage.py
      - start_beat
    ports: []

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - main

volumes:
  pg-data:
  redis-data:
  pgadmin:

networks:
  main:
    driver: bridge
