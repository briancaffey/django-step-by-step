"use strict";(self.webpackChunkvuepress_docs=self.webpackChunkvuepress_docs||[]).push([[920],{201:(e,o,i)=>{i.r(o),i.d(o,{data:()=>n});const n={key:"v-3c27ed90",path:"/topics/docker-compose/",title:"Using docker compose",lang:"en-US",frontmatter:{next:"/topics/jwt-authentication",prev:"/topics/django"},excerpt:"",headers:[{level:2,title:"Using docker compose for local development",slug:"using-docker-compose-for-local-development",children:[{level:3,title:"nginx",slug:"nginx",children:[]},{level:3,title:"nginx routing",slug:"nginx-routing",children:[]},{level:3,title:"backend",slug:"backend",children:[]}]}],filePathRelative:"topics/docker-compose/README.md",git:{updatedTime:1745500356e3,contributors:[]}}},1518:(e,o,i)=>{i.r(o),i.d(o,{default:()=>p});var n=i(6252);const l=(0,n.Wm)("h1",{id:"using-docker-compose",tabindex:"-1"},[(0,n.Wm)("a",{class:"header-anchor",href:"#using-docker-compose","aria-hidden":"true"},"#"),(0,n.Uk)(" Using docker compose")],-1),t={class:"table-of-contents"},c=(0,n.Uk)("Using docker compose for local development"),r=(0,n.Uk)("nginx"),a=(0,n.Uk)("nginx routing"),d=(0,n.Uk)("backend"),s=(0,n.uE)('<h2 id="using-docker-compose-for-local-development" tabindex="-1"><a class="header-anchor" href="#using-docker-compose-for-local-development" aria-hidden="true">#</a> Using docker compose for local development</h2><p>The easiest way to start the project in a local development environment is to use <code>docker compose</code>. The <code>docker-compose.yml</code> file in the root of the project contains a number of services for running both the application as well as utility services for debugging and observability.</p><p>The application services include:</p><ul><li>nginx</li><li>nuxt-app</li><li>postgres</li><li>redis</li><li>backend (gunicorn process)</li><li>celery_worker</li><li>celery_beat</li><li>migrate</li></ul><p>The utility services include:</p><ul><li>pgadmin</li><li>redis-commander</li><li>mailhog</li><li>flower</li></ul><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> <code>nginx</code></h3><p>The <code>nginx</code> service is like the front-door for the application.</p><h3 id="nginx-routing" tabindex="-1"><a class="header-anchor" href="#nginx-routing" aria-hidden="true">#</a> <code>nginx</code> routing</h3><p>All requests to <code>localhost</code> (port <code>80</code> of <code>localhost</code>) are sent to the <code>nginx</code> container. The nginx configuration file (<code>nginx/dev/dev.conf</code>) is used to route applications to either the <code>backend</code> container if the request starts with one of the following:</p><ul><li><code>/api/</code></li><li><code>/admin/</code></li><li><code>/graphql/</code></li></ul><p>All other requests will be sent to the nuxt-app service on port 3000 and are served by the Nuxt.js application.</p><h3 id="backend" tabindex="-1"><a class="header-anchor" href="#backend" aria-hidden="true">#</a> <code>backend</code></h3><p>The backend service is the gunicorn server that runs the wsgi application Django application. It serves requests for the REST and GraphQL APIs, as well as the Django Admin interface.</p>',14),p={render:function(e,o){const i=(0,n.up)("RouterLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[l,(0,n.Wm)("nav",t,[(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[(0,n.Wm)(i,{to:"#using-docker-compose-for-local-development"},{default:(0,n.w5)((()=>[c])),_:1}),(0,n.Wm)("ul",null,[(0,n.Wm)("li",null,[(0,n.Wm)(i,{to:"#nginx"},{default:(0,n.w5)((()=>[r])),_:1})]),(0,n.Wm)("li",null,[(0,n.Wm)(i,{to:"#nginx-routing"},{default:(0,n.w5)((()=>[a])),_:1})]),(0,n.Wm)("li",null,[(0,n.Wm)(i,{to:"#backend"},{default:(0,n.w5)((()=>[d])),_:1})])])])])]),s],64)}}}}]);