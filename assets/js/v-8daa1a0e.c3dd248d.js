"use strict";(self.webpackChunkvuepress_docs=self.webpackChunkvuepress_docs||[]).push([[509],{6464:(e,t,i)=>{i.r(t),i.d(t,{data:()=>a});const a={key:"v-8daa1a0e",path:"/",title:"",lang:"en-US",frontmatter:{home:!0,actions:[{text:"Introduction",link:"/intro",type:"primary"}],heroImage:"/images/ublog.png",features:[{title:"Full Stack",details:"This project covers the full technology stack of modern web applications, from frontend to backend to CI/CD and Infrastructure as Code"},{title:"Twelve-Factor App",details:"This project adheres to the 12Factor App philosophy"},{title:"Best Practices",details:"This project focuses on implementing a simple application with all of the best practices you would see in a healthy, production-ready application"},{title:"IaC Rosetta Stone",details:"This project implements the same application architecture using CDK, Terraform and Pulumi"},{title:"GitHub Actions",details:"GitHub Actions is used for Continuous Integration and Continuous Delivery, including infrastructure and application pipelines"},{title:"AWS ECS Fargate",details:"This project focuses on running containerized Django applications using ECS Fargate, a serverless compute offering from AWS"},{title:"FBVs and CBVs",details:"The backend Django app is implemented using Django templates using both functions-based views and class-based views"},{title:"DRF and GraphQL",details:"The Django app also implements an API using both REST with DRF and GraphQL with Graphene"},{title:"Quasar Framework",details:"A frontend client built with TypeScript, Vue.js, and Quasar Framework consumes the DRF REST API"},{title:"Python and TypeScript",details:"Python is used on the backend and TypeScript is used for both the frontend client and infrastructure code"},{title:"Load testing",details:"The project uses k6 for simulating traffic which can run locally or using GitHub Actions"},{title:"Developer Experience",details:"This project aims to have a simple and understandable developer experience"},{title:"compose and venv",details:"Local backend development can be done with both virtual environments and docker compose"},{title:"Testing and coverage",details:"pytest is used for backend tests, and test coverage is measured with pytest-cov"}],footer:"MIT Licensed | Copyright © 2023 Brian Caffey"},excerpt:"",headers:[{level:2,title:"How to get help",slug:"how-to-get-help",children:[]}],filePathRelative:"README.md",git:{updatedTime:1673832222e3,contributors:[]}}},4541:(e,t,i)=>{i.r(t),i.d(t,{default:()=>d});var a=i(6252);const o=(0,a.uE)('<p>This documentation covers lots of different topics that are related to various aspects of the project. The project aims to provide two things:</p><ul><li>a working example of a sample web application called μblog.</li><li>in-depth technical guides on how to build each part of the application</li></ul><p>At a high level, the documentation can be broken down into the following categories:</p><ul><li>Django application set up</li><li>Local development environment</li></ul><h2 id="how-to-get-help" tabindex="-1"><a class="header-anchor" href="#how-to-get-help" aria-hidden="true">#</a> How to get help</h2><p>This project is driven by a community of contributors. If you are having trouble with any part of this application, you can get help in a number of ways:</p>',6),n=(0,a.Uk)("Join the Discord community: "),s={href:"https://discord.gg/pXzCwc6HFH",target:"_blank",rel:"noopener noreferrer"},r=(0,a.Uk)("https://discord.gg/pXzCwc6HFH"),l=(0,a.Uk)("Start a discussion on the GitHub project: "),c={href:"https://github.com/briancaffey/django-step-by-step/discussions",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("https://github.com/briancaffey/django-step-by-step/discussions"),d={render:function(e,t){const i=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[o,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[n,(0,a.Wm)("a",s,[r,(0,a.Wm)(i)])]),(0,a.Wm)("li",null,[l,(0,a.Wm)("a",c,[p,(0,a.Wm)(i)])])])],64)}}}}]);