import{_ as i,c as n,a as e,b as a,o}from"./app-kI_tQ4DG.js";const s={};function r(l,t){return o(),n("div",null,t[0]||(t[0]=[e("h2",{id:"how-to-get-help",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-get-help"},[e("span",null,"How to get help")])],-1),e("p",null,"This project is driven by a community of contributors. If you are having trouble with any part of this application, you can get help in a number of ways:",-1),e("ul",null,[e("li",null,[a("Join the Discord community: "),e("a",{href:"https://discord.gg/pXzCwc6HFH",target:"_blank",rel:"noopener noreferrer"},"https://discord.gg/pXzCwc6HFH")]),e("li",null,[a("Start a discussion on the GitHub project: "),e("a",{href:"https://github.com/briancaffey/django-step-by-step/discussions",target:"_blank",rel:"noopener noreferrer"},"https://github.com/briancaffey/django-step-by-step/discussions")])],-1)]))}const d=i(s,[["render",r]]),p=JSON.parse('{"path":"/","title":"","lang":"en-US","frontmatter":{"home":true,"actions":[{"text":"Introduction","link":"/intro/","type":"primary"}],"heroImage":"/images/ublog.png","features":[{"title":"Full Stack","details":"This project covers the full technology stack of modern web applications, from frontend to backend to CI/CD and Infrastructure as Code"},{"title":"Twelve-Factor App","details":"This project adheres to the 12Factor App philosophy"},{"title":"IaC Rosetta Stone","details":"This project implements the same application architecture using CDK, Terraform and Pulumi"},{"title":"GitHub Actions","details":"GitHub Actions is used for Continuous Integration and Continuous Delivery, including infrastructure and application pipelines"},{"title":"AWS ECS Fargate","details":"This project focuses on running containerized Django applications using ECS Fargate, a serverless compute offering from AWS"},{"title":"FBVs and CBVs","details":"The backend Django app is implemented using Django templates using both functions-based views and class-based views"},{"title":"DRF and GraphQL","details":"The Django app also implements an API using both REST with DRF and GraphQL with Graphene"},{"title":"Nuxt.js","details":"A SSR frontend client built with TypeScript, Vue.js, and Nuxt.js consumes the DRF REST API"},{"title":"Python and TypeScript","details":"Python is used on the backend and TypeScript is used for both the frontend client and infrastructure code"},{"title":"Developer Experience","details":"This project aims to have a simple and understandable developer experience"},{"title":"Testing and coverage","details":"pytest is used for backend tests, and test coverage is measured with pytest-cov"}],"footer":"MIT Licensed | Copyright Â© 2025 Brian Caffey"},"git":{"updatedTime":1745970987000,"contributors":[{"name":"Brian Caffey","username":"","email":"briancaffey2010@gmail.com","commits":1}],"changelog":[{"hash":"7889dc32f6ef7ebb4c9d12b33152dde7380e12a9","time":1745970987000,"email":"briancaffey2010@gmail.com","author":"Brian Caffey","message":"feat(readme): update readme"}]},"filePathRelative":"README.md"}');export{d as comp,p as data};
