import{_ as l,c as s,a as o,d as r,e as i,w as t,r as c,o as d,b as a}from"./app-kI_tQ4DG.js";const p={},u={class:"table-of-contents"};function h(m,e){const n=c("router-link");return d(),s("div",null,[e[4]||(e[4]=o("h1",{id:"using-docker-compose",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#using-docker-compose"},[o("span",null,"Using docker compose")])],-1)),o("nav",u,[o("ul",null,[o("li",null,[i(n,{to:"#using-docker-compose-for-local-development"},{default:t(()=>e[0]||(e[0]=[a("Using docker compose for local development")])),_:1}),o("ul",null,[o("li",null,[i(n,{to:"#nginx"},{default:t(()=>e[1]||(e[1]=[a("nginx")])),_:1})]),o("li",null,[i(n,{to:"#nginx-routing"},{default:t(()=>e[2]||(e[2]=[a("nginx routing")])),_:1})]),o("li",null,[i(n,{to:"#backend"},{default:t(()=>e[3]||(e[3]=[a("backend")])),_:1})])])])])]),e[5]||(e[5]=r('<h2 id="using-docker-compose-for-local-development" tabindex="-1"><a class="header-anchor" href="#using-docker-compose-for-local-development"><span>Using docker compose for local development</span></a></h2><p>The easiest way to start the project in a local development environment is to use <code>docker compose</code>. The <code>docker-compose.yml</code> file in the root of the project contains a number of services for running both the application as well as utility services for debugging and observability.</p><p>The application services include:</p><ul><li>nginx</li><li>nuxt-app</li><li>postgres</li><li>redis</li><li>backend (gunicorn process)</li><li>celery_worker</li><li>celery_beat</li><li>migrate</li></ul><p>The utility services include:</p><ul><li>pgadmin</li><li>redis-commander</li><li>mailhog</li><li>flower</li></ul><h3 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx"><span><code>nginx</code></span></a></h3><p>The <code>nginx</code> service is like the front-door for the application.</p><h3 id="nginx-routing" tabindex="-1"><a class="header-anchor" href="#nginx-routing"><span><code>nginx</code> routing</span></a></h3><p>All requests to <code>localhost</code> (port <code>80</code> of <code>localhost</code>) are sent to the <code>nginx</code> container. The nginx configuration file (<code>nginx/dev/dev.conf</code>) is used to route applications to either the <code>backend</code> container if the request starts with one of the following:</p><ul><li><code>/api/</code></li><li><code>/admin/</code></li><li><code>/graphql/</code></li></ul><p>All other requests will be sent to the nuxt-app service on port 3000 and are served by the Nuxt.js application.</p><h3 id="backend" tabindex="-1"><a class="header-anchor" href="#backend"><span><code>backend</code></span></a></h3><p>The backend service is the gunicorn server that runs the wsgi application Django application. It serves requests for the REST and GraphQL APIs, as well as the Django Admin interface.</p>',14))])}const f=l(p,[["render",h]]),x=JSON.parse('{"path":"/topics/docker-compose.html","title":"Using docker compose","lang":"en-US","frontmatter":{"next":"/topics/vuepress","prev":"/topics/nuxt"},"git":{"updatedTime":1745970987000,"contributors":[{"name":"Brian Caffey","username":"","email":"briancaffey2010@gmail.com","commits":1}],"changelog":[{"hash":"7889dc32f6ef7ebb4c9d12b33152dde7380e12a9","time":1745970987000,"email":"briancaffey2010@gmail.com","author":"Brian Caffey","message":"feat(readme): update readme"}]},"filePathRelative":"topics/docker-compose.md"}');export{f as comp,x as data};
