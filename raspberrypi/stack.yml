# deploy locally on raspberry pi with single node swarm cluster

version: "3.4"

services:
  postgres:
    image: postgres:13.1
    networks:
      - main
    env_file:
      - .raspberrypi.env
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    volumes:
      - redisdata:/data
    networks:
      - main

  backend:
    image: ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}
    networks:
      - main
    command:
      - "gunicorn"
      - "-t"
      - "1000"
      - "-b"
      - "0.0.0.0:8000"
      - "--log-level"
      - "debug"
      - "backend.wsgi"
    ports:
      - "8000:8000"
    env_file:
      - .raspberrypi.env
    volumes:
      - backendassets:/code/assets
    depends_on:
      - postgres
      - redis

  celery:
    image: ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHORT_SHA}
    command:
      - "celery"
      - "--app=backend.celery_app:app"
      - "worker"
      - "-Q"
      - "default"
      - "--concurrency=1"
      - "--loglevel=INFO"
    networks:
      - main
    env_file:
      - .raspberrypi.env
    volumes:
      - backendassets:/code/assets
    depends_on:
      - postgres
      - redis

  flower:
    image: mher/flower:0.9
    container_name: flower
    command: --url_prefix=flower --inspect_timeout=20000
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
    networks:
      - main
    depends_on:
      - celery
      - redis

  web:
    image: ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHORT_SHA}
    networks:
      - main
    ports:
      - "8080:80"
    volumes:
      - backendassets:/usr/src/app/assets

networks:
  main:
    driver: overlay

volumes:
  backendassets:
    name: backendassets
  redisdata:
    name: redisdata
  pgdata:
    name: pgdata
