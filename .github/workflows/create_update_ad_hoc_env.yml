# github action to create or update an ad hoc environment
name: Create or update ad hoc environment

on:
  workflow_dispatch:
    inputs:
      workspace:
        description: 'Name of terraform workspace to use'
        required: true
        default: 'dev'
        type: string

jobs:
  create_update_ad_hoc_env:
    name: "Create or update ad hoc environment"
    environment: terraform-aws-ecs
    runs-on: ubuntu-latest

    steps:

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "terraform init, plan and apply for ad hoc environment"
        id: terraform_init
        env:
          TF_BACKEND_BUCKET: ${{ secrets.TF_BACKEND_BUCKET }}
          TF_BACKEND_KEY: ${{ secrets.TF_BACKEND_KEY }}
          TF_BACKEND_REGION: ${{ secrets.TF_BACKEND_REGION }}
          WORKSPACE: ${{ github.event.inputs.workspace }}

          # Terraform variables
          TF_VAR_ecr_be_repo_url: ${{ secrets.BACKEND_IMAGE_URI }}
          TF_VAR_ecr_fe_repo_url: ${{ secrets.FRONTEND_IMAGE_URI }}
          TF_VAR_acm_certificate_arn: ${{ secrets.ACM_CERTIFICATE_ARN }}
          TF_VAR_frontend_url: ${{ secrets.FRONTEND_URL }}
          TF_VAR_zone_name: ${{ secrets.ZONE_NAME }}
          TF_VAR_record_name: ${{ secrets.RECORD_NAME }}

        run: |
          # set the terraform workspace
          export TF_WORKSPACE=$WORKSPACE

          terraform -chdir=terraform/live/dev \
            init \
            -backend-config="bucket=${TF_BACKEND_BUCKET}" \
            -backend-config="key=${TF_BACKEND_KEY}" \
            -backend-config="region=${TF_BACKEND_REGION}"

          terraform -chdir=terraform/live/dev \
            plan \
            -no-color \
            -var-file=${TF_WORKSPACE}.tfvars

          terraform -chdir=terraform/live/dev \
            apply \
            -auto-approve \
            -var-file=${TF_WORKSPACE}.tfvars
