name: Backend / Unit Tests

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - feature/cdk

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  lint-and-test-python:
    if: 1 == 0
    # Name the Job
    name: Lint and test python code
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        python-version: [3.8]

    steps:
      # Setup python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # install pip dependencies
      - name: pip install
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements_dev.txt

      # lint python code using flake8
      - name: Lint code
        run: flake8 backend

      # run pytest tests
      - name: Run pytest tests
        run: |
          python -V
          pytest backend

  # reference: https://github.com/ciaranevans/pretzel
  deploy:
    name: Deploy Stack with CDK
    runs-on: ubuntu-latest
    # needs: [lint-and-test-python]
    # if: github.ref == 'refs/heads/feature/cdk'
    steps:
      - uses: actions/checkout@v2

      - name: Setup up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install AWS CDK
        run: |
          npm install -g aws-cdk

      - name: Configure awscli
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: CDK Deploy
        env:
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          # cdk bootstrap --app awscdk/app.py aws://$AWS_ACCOUNT_ID/$AWS_DEFAULT_REGION
          make cdk-deploy
